/*------------------------------------------------------
1、编译过程 
1）将模板解析为AST    
        通过各种正则表达式去匹配模板中的内容
        判断是否有根节点、是否符合规范
2）优化AST
        将永远不会变动的节点提取出来，跳过对比算法功能
3）将AST转化为render函数
        遍历整个AST，根据不同条件生成不同代码

{
    type: 1, // 类型
    tag, // 标签
    attrsList: attrs,// 属性列表
    attrsMap: makeAttrsMap(attrs), // 属性映射
    parent, // 父节点
    children: [] // 子节点
}
-------------------------------------------------------*/
/*-------------------------------------------------------
nextTick
下次DOM更新循环结束后执行延迟回调，用以获得更新后的DOM
默认使用微任务，特殊情况下使用 宏任务（v-on）
对于实现 macrotasks ，会先判断是否能使用 setImmediate ，不能的话降级为 MessageChannel ，以上都不行的话就使用 setTimeout
-------------------------------------------------------*/